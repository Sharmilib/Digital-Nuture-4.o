import java.util.Arrays;
import java.util.Comparator;

public class SearchDemo {

    // Linear Search (O(n))
    public static Product linearSearch(Product[] products, String productName) {
        for (Product p : products) {
            if (p.productName.equalsIgnoreCase(productName)) {
                return p;
            }
        }
        return null;
    }

    // Binary Search (O(log n)) - requires sorted array
    public static Product binarySearch(Product[] products, String productName) {
        int left = 0;
        int right = products.length - 1;

        while (left <= right) {
            int mid = (left + right) / 2;
            int cmp = products[mid].productName.compareToIgnoreCase(productName);

            if (cmp == 0) return products[mid];
            else if (cmp < 0) left = mid + 1;
            else right = mid - 1;
        }
        return null;
    }

    // Main method for testing
    public static void main(String[] args) {
        Product[] products = {
            new Product(101, "Laptop", "Electronics"),
            new Product(102, "Shoes", "Footwear"),
            new Product(103, "Book", "Education"),
            new Product(104, "Phone", "Electronics"),
            new Product(105, "Tablet", "Electronics")
        };

        System.out.println("Linear Search:");
        Product result1 = linearSearch(products, "Phone");
        System.out.println(result1 != null ? result1 : "Not found");

        System.out.println("\n Binary Search:");
        // Sort array by productName before binary search
        Arrays.sort(products, Comparator.comparing(p -> p.productName));
        Product result2 = binarySearch(products, "Phone");
        System.out.println(result2 != null ? result2 : "Not found");
    }
}
